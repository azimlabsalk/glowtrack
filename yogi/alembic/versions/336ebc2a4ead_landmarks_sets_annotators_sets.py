"""landmarks_sets_annotators_sets

Revision ID: 336ebc2a4ead
Revises: b2139b9c9532
Create Date: 2020-05-10 22:34:36.567005

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '336ebc2a4ead'
down_revision = 'b2139b9c9532'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('annotators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_annotators'))
    )
    op.create_table('landmarks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('mirror_id', sa.Integer(), nullable=True),
    sa.Column('label_studio_checkbox_name', sa.String(), nullable=True),
    sa.Column('label_studio_label_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['mirror_id'], ['landmarks.id'], name=op.f('fk_landmarks_mirror_id_landmarks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_landmarks'))
    )
    op.create_table('landmarksets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_landmarksets'))
    )
    op.create_table('annotationsets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('annotator_id', sa.Integer(), nullable=True),
    sa.Column('landmark_set_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['annotator_id'], ['annotators.id'], name=op.f('fk_annotationsets_annotator_id_annotators')),
    sa.ForeignKeyConstraint(['id'], ['label_sources.id'], name=op.f('fk_annotationsets_id_label_sources')),
    sa.ForeignKeyConstraint(['landmark_set_id'], ['landmarksets.id'], name=op.f('fk_annotationsets_landmark_set_id_landmarksets')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_annotationsets'))
    )
    op.create_table('landmarkset_association',
    sa.Column('landmark_id', sa.Integer(), nullable=True),
    sa.Column('landmarkset_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['landmark_id'], ['landmarks.id'], name=op.f('fk_landmarkset_association_landmark_id_landmarks')),
    sa.ForeignKeyConstraint(['landmarkset_id'], ['landmarksets.id'], name=op.f('fk_landmarkset_association_landmarkset_id_landmarksets'))
    )
    with op.batch_alter_table('landmarkset_association', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_landmarkset_association_landmark_id'), ['landmark_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_landmarkset_association_landmarkset_id'), ['landmarkset_id'], unique=False)
        batch_op.create_index('landmarkset_joint_idx', ['landmark_id', 'landmarkset_id'], unique=False)

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_images_path'), ['path'], unique=False)

    with op.batch_alter_table('labels', schema=None) as batch_op:
        batch_op.add_column(sa.Column('landmark_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('occluded', sa.Boolean(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_labels_landmark_id_landmarks'), 'landmarks', ['landmark_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('labels', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_labels_landmark_id_landmarks'), type_='foreignkey')
        batch_op.drop_column('occluded')
        batch_op.drop_column('landmark_id')

    with op.batch_alter_table('images', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_images_path'))

    with op.batch_alter_table('landmarkset_association', schema=None) as batch_op:
        batch_op.drop_index('landmarkset_joint_idx')
        batch_op.drop_index(batch_op.f('ix_landmarkset_association_landmarkset_id'))
        batch_op.drop_index(batch_op.f('ix_landmarkset_association_landmark_id'))

    op.drop_table('landmarkset_association')
    op.drop_table('annotationsets')
    op.drop_table('landmarksets')
    op.drop_table('landmarks')
    op.drop_table('annotators')
    # ### end Alembic commands ###
